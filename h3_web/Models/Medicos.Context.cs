//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace h3_web.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DB_MedicosEntities1 : DbContext
    {
        public DB_MedicosEntities1()
            : base("name=DB_MedicosEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Administrador> Administrador { get; set; }
        public virtual DbSet<Cita> Cita { get; set; }
        public virtual DbSet<Horario> Horario { get; set; }
        public virtual DbSet<Nomina> Nomina { get; set; }
        public virtual DbSet<Orden> Orden { get; set; }
        public virtual DbSet<Paciente> Paciente { get; set; }
        public virtual DbSet<Persona> Persona { get; set; }
        public virtual DbSet<Procedimiento> Procedimiento { get; set; }
        public virtual DbSet<Profesional> Profesional { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<string> SP_Asignar_Horario(string especialidad)
        {
            var especialidadParameter = especialidad != null ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Asignar_Horario", especialidadParameter);
        }
    
        public virtual ObjectResult<SP_Buscar_Cita_Pro_Result> SP_Buscar_Cita_Pro(string doc_Paciente)
        {
            var doc_PacienteParameter = doc_Paciente != null ?
                new ObjectParameter("Doc_Paciente", doc_Paciente) :
                new ObjectParameter("Doc_Paciente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Buscar_Cita_Pro_Result>("SP_Buscar_Cita_Pro", doc_PacienteParameter);
        }
    
        public virtual ObjectResult<string> SP_Buscar_CitaEsp(string cod_Cita)
        {
            var cod_CitaParameter = cod_Cita != null ?
                new ObjectParameter("Cod_Cita", cod_Cita) :
                new ObjectParameter("Cod_Cita", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Buscar_CitaEsp", cod_CitaParameter);
        }
    
        public virtual ObjectResult<SP_Buscar_CitaPa_Result> SP_Buscar_CitaPa(string doc_Paciente)
        {
            var doc_PacienteParameter = doc_Paciente != null ?
                new ObjectParameter("Doc_Paciente", doc_Paciente) :
                new ObjectParameter("Doc_Paciente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Buscar_CitaPa_Result>("SP_Buscar_CitaPa", doc_PacienteParameter);
        }
    
        public virtual ObjectResult<SP_Buscar_DocPro_Result> SP_Buscar_DocPro(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Buscar_DocPro_Result>("SP_Buscar_DocPro", nombreParameter);
        }
    
        public virtual ObjectResult<SP_Buscar_Profesional_Result> SP_Buscar_Profesional(string especialidad)
        {
            var especialidadParameter = especialidad != null ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Buscar_Profesional_Result>("SP_Buscar_Profesional", especialidadParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Cita_Create(string doc_Paciente, string doc_Profesional, Nullable<System.DateTime> fecha_Cita, Nullable<System.TimeSpan> hora_Cita, string estado)
        {
            var doc_PacienteParameter = doc_Paciente != null ?
                new ObjectParameter("Doc_Paciente", doc_Paciente) :
                new ObjectParameter("Doc_Paciente", typeof(string));
    
            var doc_ProfesionalParameter = doc_Profesional != null ?
                new ObjectParameter("Doc_Profesional", doc_Profesional) :
                new ObjectParameter("Doc_Profesional", typeof(string));
    
            var fecha_CitaParameter = fecha_Cita.HasValue ?
                new ObjectParameter("Fecha_Cita", fecha_Cita) :
                new ObjectParameter("Fecha_Cita", typeof(System.DateTime));
    
            var hora_CitaParameter = hora_Cita.HasValue ?
                new ObjectParameter("Hora_Cita", hora_Cita) :
                new ObjectParameter("Hora_Cita", typeof(System.TimeSpan));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Cita_Create", doc_PacienteParameter, doc_ProfesionalParameter, fecha_CitaParameter, hora_CitaParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Cita_Delete(Nullable<int> cod_Cita)
        {
            var cod_CitaParameter = cod_Cita.HasValue ?
                new ObjectParameter("Cod_Cita", cod_Cita) :
                new ObjectParameter("Cod_Cita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Cita_Delete", cod_CitaParameter);
        }
    
        public virtual ObjectResult<SP_Cita_Index_Result> SP_Cita_Index()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Cita_Index_Result>("SP_Cita_Index");
        }
    
        public virtual ObjectResult<SP_Cita_Read_Result> SP_Cita_Read(Nullable<int> cod_Cita)
        {
            var cod_CitaParameter = cod_Cita.HasValue ?
                new ObjectParameter("Cod_Cita", cod_Cita) :
                new ObjectParameter("Cod_Cita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Cita_Read_Result>("SP_Cita_Read", cod_CitaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Cita_Reprogramar(Nullable<int> cod_Cita, Nullable<System.DateTime> fecha_Cita, Nullable<System.TimeSpan> hora_Cita)
        {
            var cod_CitaParameter = cod_Cita.HasValue ?
                new ObjectParameter("Cod_Cita", cod_Cita) :
                new ObjectParameter("Cod_Cita", typeof(int));
    
            var fecha_CitaParameter = fecha_Cita.HasValue ?
                new ObjectParameter("Fecha_Cita", fecha_Cita) :
                new ObjectParameter("Fecha_Cita", typeof(System.DateTime));
    
            var hora_CitaParameter = hora_Cita.HasValue ?
                new ObjectParameter("Hora_Cita", hora_Cita) :
                new ObjectParameter("Hora_Cita", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Cita_Reprogramar", cod_CitaParameter, fecha_CitaParameter, hora_CitaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Cita_Update(Nullable<int> cod_Cita, string doc_Paciente, string doc_Profesional, Nullable<System.DateTime> fecha_Cita, Nullable<System.TimeSpan> hora_Cita, string estado)
        {
            var cod_CitaParameter = cod_Cita.HasValue ?
                new ObjectParameter("Cod_Cita", cod_Cita) :
                new ObjectParameter("Cod_Cita", typeof(int));
    
            var doc_PacienteParameter = doc_Paciente != null ?
                new ObjectParameter("Doc_Paciente", doc_Paciente) :
                new ObjectParameter("Doc_Paciente", typeof(string));
    
            var doc_ProfesionalParameter = doc_Profesional != null ?
                new ObjectParameter("Doc_Profesional", doc_Profesional) :
                new ObjectParameter("Doc_Profesional", typeof(string));
    
            var fecha_CitaParameter = fecha_Cita.HasValue ?
                new ObjectParameter("Fecha_Cita", fecha_Cita) :
                new ObjectParameter("Fecha_Cita", typeof(System.DateTime));
    
            var hora_CitaParameter = hora_Cita.HasValue ?
                new ObjectParameter("Hora_Cita", hora_Cita) :
                new ObjectParameter("Hora_Cita", typeof(System.TimeSpan));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Cita_Update", cod_CitaParameter, doc_PacienteParameter, doc_ProfesionalParameter, fecha_CitaParameter, hora_CitaParameter, estadoParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Historial_Clinico_Create(string doc_Paciente, Nullable<int> orden)
        {
            var doc_PacienteParameter = doc_Paciente != null ?
                new ObjectParameter("Doc_Paciente", doc_Paciente) :
                new ObjectParameter("Doc_Paciente", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Historial_Clinico_Create", doc_PacienteParameter, ordenParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Historial_Clinico_Delete_o(Nullable<int> orden)
        {
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Historial_Clinico_Delete_o", ordenParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Historial_Clinico_Delete_p(string doc_Paciente)
        {
            var doc_PacienteParameter = doc_Paciente != null ?
                new ObjectParameter("Doc_Paciente", doc_Paciente) :
                new ObjectParameter("Doc_Paciente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Historial_Clinico_Delete_p", doc_PacienteParameter);
        }
    
        public virtual ObjectResult<SP_Historial_Clinico_Index_Result> SP_Historial_Clinico_Index()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Historial_Clinico_Index_Result>("SP_Historial_Clinico_Index");
        }
    
        public virtual ObjectResult<SP_Historial_Clinico_Read_Result> SP_Historial_Clinico_Read(string doc_Paciente)
        {
            var doc_PacienteParameter = doc_Paciente != null ?
                new ObjectParameter("Doc_Paciente", doc_Paciente) :
                new ObjectParameter("Doc_Paciente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Historial_Clinico_Read_Result>("SP_Historial_Clinico_Read", doc_PacienteParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Historial_Clinico_Update(string doc_Paciente, Nullable<int> orden)
        {
            var doc_PacienteParameter = doc_Paciente != null ?
                new ObjectParameter("Doc_Paciente", doc_Paciente) :
                new ObjectParameter("Doc_Paciente", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Historial_Clinico_Update", doc_PacienteParameter, ordenParameter);
        }
    
        public virtual ObjectResult<SP_Iniciar_Sesion_Result> SP_Iniciar_Sesion(string correo, string contraseña)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Iniciar_Sesion_Result>("SP_Iniciar_Sesion", correoParameter, contraseñaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Nomina_Delete(string iD_Nomina)
        {
            var iD_NominaParameter = iD_Nomina != null ?
                new ObjectParameter("ID_Nomina", iD_Nomina) :
                new ObjectParameter("ID_Nomina", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Nomina_Delete", iD_NominaParameter);
        }
    
        public virtual ObjectResult<SP_Nomina_Index_Result> SP_Nomina_Index()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Nomina_Index_Result>("SP_Nomina_Index");
        }
    
        public virtual ObjectResult<SP_Nomina_Read_Result> SP_Nomina_Read(string iD_Nomina)
        {
            var iD_NominaParameter = iD_Nomina != null ?
                new ObjectParameter("ID_Nomina", iD_Nomina) :
                new ObjectParameter("ID_Nomina", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Nomina_Read_Result>("SP_Nomina_Read", iD_NominaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Nomina_Update(string iD_Nomina, string doc_Pro, Nullable<decimal> salario, Nullable<System.DateTime> fecha_Pago, string estado)
        {
            var iD_NominaParameter = iD_Nomina != null ?
                new ObjectParameter("ID_Nomina", iD_Nomina) :
                new ObjectParameter("ID_Nomina", typeof(string));
    
            var doc_ProParameter = doc_Pro != null ?
                new ObjectParameter("Doc_Pro", doc_Pro) :
                new ObjectParameter("Doc_Pro", typeof(string));
    
            var salarioParameter = salario.HasValue ?
                new ObjectParameter("Salario", salario) :
                new ObjectParameter("Salario", typeof(decimal));
    
            var fecha_PagoParameter = fecha_Pago.HasValue ?
                new ObjectParameter("Fecha_Pago", fecha_Pago) :
                new ObjectParameter("Fecha_Pago", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Nomina_Update", iD_NominaParameter, doc_ProParameter, salarioParameter, fecha_PagoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Orden_Delete(Nullable<int> cod_Orden)
        {
            var cod_OrdenParameter = cod_Orden.HasValue ?
                new ObjectParameter("Cod_Orden", cod_Orden) :
                new ObjectParameter("Cod_Orden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Orden_Delete", cod_OrdenParameter);
        }
    
        public virtual ObjectResult<SP_Orden_Index_Result> SP_Orden_Index()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Orden_Index_Result>("SP_Orden_Index");
        }
    
        public virtual ObjectResult<SP_Orden_Read_Result> SP_Orden_Read(Nullable<int> cod_Orden)
        {
            var cod_OrdenParameter = cod_Orden.HasValue ?
                new ObjectParameter("Cod_Orden", cod_Orden) :
                new ObjectParameter("Cod_Orden", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Orden_Read_Result>("SP_Orden_Read", cod_OrdenParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Orden_Update(Nullable<int> cod_Orden, Nullable<int> cod_Cita, string diagnostico, string medicamento, string recomendacion, string remision)
        {
            var cod_OrdenParameter = cod_Orden.HasValue ?
                new ObjectParameter("Cod_Orden", cod_Orden) :
                new ObjectParameter("Cod_Orden", typeof(int));
    
            var cod_CitaParameter = cod_Cita.HasValue ?
                new ObjectParameter("Cod_Cita", cod_Cita) :
                new ObjectParameter("Cod_Cita", typeof(int));
    
            var diagnosticoParameter = diagnostico != null ?
                new ObjectParameter("Diagnostico", diagnostico) :
                new ObjectParameter("Diagnostico", typeof(string));
    
            var medicamentoParameter = medicamento != null ?
                new ObjectParameter("Medicamento", medicamento) :
                new ObjectParameter("Medicamento", typeof(string));
    
            var recomendacionParameter = recomendacion != null ?
                new ObjectParameter("Recomendacion", recomendacion) :
                new ObjectParameter("Recomendacion", typeof(string));
    
            var remisionParameter = remision != null ?
                new ObjectParameter("Remision", remision) :
                new ObjectParameter("Remision", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Orden_Update", cod_OrdenParameter, cod_CitaParameter, diagnosticoParameter, medicamentoParameter, recomendacionParameter, remisionParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Paciente_Create(string doc_Paciente, string tipo_documento)
        {
            var doc_PacienteParameter = doc_Paciente != null ?
                new ObjectParameter("Doc_Paciente", doc_Paciente) :
                new ObjectParameter("Doc_Paciente", typeof(string));
    
            var tipo_documentoParameter = tipo_documento != null ?
                new ObjectParameter("Tipo_documento", tipo_documento) :
                new ObjectParameter("Tipo_documento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Paciente_Create", doc_PacienteParameter, tipo_documentoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Paciente_Delete(string doc_Paciente)
        {
            var doc_PacienteParameter = doc_Paciente != null ?
                new ObjectParameter("Doc_Paciente", doc_Paciente) :
                new ObjectParameter("Doc_Paciente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Paciente_Delete", doc_PacienteParameter);
        }
    
        public virtual ObjectResult<SP_Paciente_Index_Result> SP_Paciente_Index()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Paciente_Index_Result>("SP_Paciente_Index");
        }
    
        public virtual ObjectResult<SP_Paciente_Read_Result> SP_Paciente_Read(string doc_Paciente)
        {
            var doc_PacienteParameter = doc_Paciente != null ?
                new ObjectParameter("Doc_Paciente", doc_Paciente) :
                new ObjectParameter("Doc_Paciente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Paciente_Read_Result>("SP_Paciente_Read", doc_PacienteParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Paciente_Update(string doc_Paciente, string tipo_documento)
        {
            var doc_PacienteParameter = doc_Paciente != null ?
                new ObjectParameter("Doc_Paciente", doc_Paciente) :
                new ObjectParameter("Doc_Paciente", typeof(string));
    
            var tipo_documentoParameter = tipo_documento != null ?
                new ObjectParameter("Tipo_documento", tipo_documento) :
                new ObjectParameter("Tipo_documento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Paciente_Update", doc_PacienteParameter, tipo_documentoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Persona_Create(string iD_Persona, string documento, string nombre, Nullable<System.DateTime> fecha_Nacimiento, string telefono, string correo, string contraseña, string foto, string tipo_Sangre)
        {
            var iD_PersonaParameter = iD_Persona != null ?
                new ObjectParameter("ID_Persona", iD_Persona) :
                new ObjectParameter("ID_Persona", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var fecha_NacimientoParameter = fecha_Nacimiento.HasValue ?
                new ObjectParameter("Fecha_Nacimiento", fecha_Nacimiento) :
                new ObjectParameter("Fecha_Nacimiento", typeof(System.DateTime));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("Foto", foto) :
                new ObjectParameter("Foto", typeof(string));
    
            var tipo_SangreParameter = tipo_Sangre != null ?
                new ObjectParameter("Tipo_Sangre", tipo_Sangre) :
                new ObjectParameter("Tipo_Sangre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Persona_Create", iD_PersonaParameter, documentoParameter, nombreParameter, fecha_NacimientoParameter, telefonoParameter, correoParameter, contraseñaParameter, fotoParameter, tipo_SangreParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Persona_Delete(string iD_Persona)
        {
            var iD_PersonaParameter = iD_Persona != null ?
                new ObjectParameter("ID_Persona", iD_Persona) :
                new ObjectParameter("ID_Persona", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Persona_Delete", iD_PersonaParameter);
        }
    
        public virtual ObjectResult<SP_Persona_Index_Result> SP_Persona_Index()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Persona_Index_Result>("SP_Persona_Index");
        }
    
        public virtual ObjectResult<Sp_Persona_Read_Result> Sp_Persona_Read(string iD_Persona)
        {
            var iD_PersonaParameter = iD_Persona != null ?
                new ObjectParameter("ID_Persona", iD_Persona) :
                new ObjectParameter("ID_Persona", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Persona_Read_Result>("Sp_Persona_Read", iD_PersonaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Persona_Update(string iD_Persona, string documento, string nombre, Nullable<System.DateTime> fecha_Nacimiento, string telefono, string correo, string contraseña, string foto, string tipo_Sangre)
        {
            var iD_PersonaParameter = iD_Persona != null ?
                new ObjectParameter("ID_Persona", iD_Persona) :
                new ObjectParameter("ID_Persona", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var fecha_NacimientoParameter = fecha_Nacimiento.HasValue ?
                new ObjectParameter("Fecha_Nacimiento", fecha_Nacimiento) :
                new ObjectParameter("Fecha_Nacimiento", typeof(System.DateTime));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("Foto", foto) :
                new ObjectParameter("Foto", typeof(string));
    
            var tipo_SangreParameter = tipo_Sangre != null ?
                new ObjectParameter("Tipo_Sangre", tipo_Sangre) :
                new ObjectParameter("Tipo_Sangre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Persona_Update", iD_PersonaParameter, documentoParameter, nombreParameter, fecha_NacimientoParameter, telefonoParameter, correoParameter, contraseñaParameter, fotoParameter, tipo_SangreParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Procedimiento_Delete(string cod_Procedimiento)
        {
            var cod_ProcedimientoParameter = cod_Procedimiento != null ?
                new ObjectParameter("Cod_Procedimiento", cod_Procedimiento) :
                new ObjectParameter("Cod_Procedimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Procedimiento_Delete", cod_ProcedimientoParameter);
        }
    
        public virtual ObjectResult<SP_Procedimiento_Index_Result> SP_Procedimiento_Index()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Procedimiento_Index_Result>("SP_Procedimiento_Index");
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Procedimiento_Update(Nullable<int> cod_Procedimiento, string tipo_P, Nullable<System.DateTime> fecha_P, Nullable<System.TimeSpan> hora_P, string estado_P, string pro_Asignado)
        {
            var cod_ProcedimientoParameter = cod_Procedimiento.HasValue ?
                new ObjectParameter("Cod_Procedimiento", cod_Procedimiento) :
                new ObjectParameter("Cod_Procedimiento", typeof(int));
    
            var tipo_PParameter = tipo_P != null ?
                new ObjectParameter("Tipo_P", tipo_P) :
                new ObjectParameter("Tipo_P", typeof(string));
    
            var fecha_PParameter = fecha_P.HasValue ?
                new ObjectParameter("Fecha_P", fecha_P) :
                new ObjectParameter("Fecha_P", typeof(System.DateTime));
    
            var hora_PParameter = hora_P.HasValue ?
                new ObjectParameter("Hora_P", hora_P) :
                new ObjectParameter("Hora_P", typeof(System.TimeSpan));
    
            var estado_PParameter = estado_P != null ?
                new ObjectParameter("Estado_P", estado_P) :
                new ObjectParameter("Estado_P", typeof(string));
    
            var pro_AsignadoParameter = pro_Asignado != null ?
                new ObjectParameter("Pro_Asignado", pro_Asignado) :
                new ObjectParameter("Pro_Asignado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Procedimiento_Update", cod_ProcedimientoParameter, tipo_PParameter, fecha_PParameter, hora_PParameter, estado_PParameter, pro_AsignadoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Profesional_Create(string doc_Pro, string horario)
        {
            var doc_ProParameter = doc_Pro != null ?
                new ObjectParameter("Doc_Pro", doc_Pro) :
                new ObjectParameter("Doc_Pro", typeof(string));
    
            var horarioParameter = horario != null ?
                new ObjectParameter("Horario", horario) :
                new ObjectParameter("Horario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Profesional_Create", doc_ProParameter, horarioParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Profesional_Delete(string doc_Pro)
        {
            var doc_ProParameter = doc_Pro != null ?
                new ObjectParameter("Doc_Pro", doc_Pro) :
                new ObjectParameter("Doc_Pro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Profesional_Delete", doc_ProParameter);
        }
    
        public virtual ObjectResult<SP_Profesional_Index_Result> SP_Profesional_Index()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Profesional_Index_Result>("SP_Profesional_Index");
        }
    
        public virtual ObjectResult<Sp_Profesional_Read_Result> Sp_Profesional_Read(string doc_Pro)
        {
            var doc_ProParameter = doc_Pro != null ?
                new ObjectParameter("Doc_Pro", doc_Pro) :
                new ObjectParameter("Doc_Pro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Profesional_Read_Result>("Sp_Profesional_Read", doc_ProParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_Profesional_Update(string doc_Pro, string horario)
        {
            var doc_ProParameter = doc_Pro != null ?
                new ObjectParameter("Doc_Pro", doc_Pro) :
                new ObjectParameter("Doc_Pro", typeof(string));
    
            var horarioParameter = horario != null ?
                new ObjectParameter("Horario", horario) :
                new ObjectParameter("Horario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_Profesional_Update", doc_ProParameter, horarioParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
